// Title: ASCSlipModel
// Description: Various functions related to the SLIP model.
// Author: Mikhail Jones

// Usage: To use this subcontroller, add the following pieces of code to the the designated files in your controller folder.

// Manifest.xml
// <depend package="asc_slip_model"/>

// Start.ops
// # ASCSlipModel
// import("asc_slip_model")
// var string ascSlipModel0Name = atrias_cm.getUniqueName("controller", "ascSlipModel")
// loadComponent(ascSlipModel0Name, "ASCSlipModel")
// addPeer("controller", ascSlipModel0Name)
// connectPeers("Deployer", ascSlipModel0Name)
// controller.ascSlipModel0Name = ascSlipModel0Name

// Stop.ops
// # ASCSlipModel
// unloadComponent(controller.ascSlipModel0Name)

// component_controller.cpp
// In the first constructor function (has the same name as your controller)
// // ASCSlipModel
// this->addProperty("ascSlipModel0Name", ascSlipModel0Name);
// In the configure hook function
// // ASCSlipModel Service
// ascSlipModel0 = this->getPeer(ascSlipModel0Name);
// if (ascSlipModel0) {
// 	slipAdvance0 = ascSlipModel0->provides("ascSlipModel")->getOperation("slipAdvance");
// 	slipForce0 = ascSlipModel0->provides("ascSlipModel")->getOperation("slipAdvance");
// }

// component_controller.h
// // ASCSlipModel
// std::string ascSlipModel0Name;
// TaskContext *ascSlipModel0;
// OperationCaller<SlipConditions(SlipModel, SlipState)> slipAdvance0;
// OperationCaller<LegForce(SlipModel, SlipState)> slipForce0;

// To use do something like this.
// // Define slipModel struct
// slipModel.g = -9.81;
// slipModel.k = 4118.0; // This is not the virtual leg spring but the actual rotational spring
// slipModel.m = 607.5/9.81;
// slipModel.r0 = 0.85;
//
// // Define slipState struct
// slipState.r = 0.85;
// slipState.dr = -sqrt(2.0*9.81*0.05);
// slipState.q = M_PI/2.0;
// slipState.dq = 0.0;
//
// // Compute and set legForce
// slipState = slipAdvance0(slipModel, slipState);
// legForce = slipForce0(slipModel, slipState);

// TODO - Add error catch incase structs are empty.


#include <asc_slip_model/controller_component.h>

namespace atrias {
namespace controller {


//ASCSlipModel =================================================================
ASCSlipModel::ASCSlipModel(std::string name):
	RTT::TaskContext(name),
	logPort(name + "_log") {

	// Operations --------------------------------------------------------------
	this->provides("ascSlipModel")->addOperation("slipAdvance", &ASCSlipModel::slipAdvance, this).doc("Given a set of initial conditions, returns 5th order Runge-Kutta numerical approximation of next time step."); 
	   
	this->provides("ascSlipModel")->addOperation("slipForce", &ASCSlipModel::slipForce, this).doc("Given a set of SLIP model conditions, returns X-Z component forces.");
    
    
    // Variables ---------------------------------------------------------------
    
    
    // Logging -----------------------------------------------------------------
    // Create a port
    addPort(logPort); 
    // Connect with buffer size 100000 so we get all data.
    ConnPolicy policy = RTT::ConnPolicy::buffer(100000);
    // Transport type = ROS
    policy.transport = 3;
    // ROS topic name
    policy.name_id = "/" + name + "_log";
    // Construct the stream between the port and ROS topic
    logPort.createStream(policy);
    log(Info) << "[ASCSlipModel] Constructed!" << endlog();
}


// slipAdvance =================================================================
SlipState ASCSlipModel::slipAdvance(SlipModel slipModel, SlipState slipState) {

    // Unpack parameters -------------------------------------------------------
    r = slipState.r;
    dr = slipState.dr;
    q = slipState.q;
    dq = slipState.dq;
    k = slipModel.k;
    g = slipModel.g;
    r0 = slipModel.r0;
    m = slipModel.m;

	// Check phase -------------------------------------------------------------
	if (r > r0) {
		// Do nothing because we are not in stance
		slipState.isFlight = true;
		
	} else {
		// Advance to next timestep because we are in stance
		slipState.isFlight = false;
		
		// Time step.
		h = 0.001;
		
        // Compute non-linear ATRIAS leg length stiffness
        l1 = 0.5;
        l2 = 0.5;
        k = k*(sin(acos(r)) - (acos(r) - acos(r0))*cos(acos(r)))/(2.0*l1*l2*pow(sin(acos(r)), 3));
		
		// Runges's 5th order Runge-Kutta numerical method
		slipState.r = r + dr*h*(2.3E1/1.92E2) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(1.25E2/1.92E2) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) + (r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0)*pow(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r, 2) - (k*(r - r0 + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0))/m)*(8.0/7.5E1) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(2.0/1.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(1.25E2/1.92E2) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/2.7E1) + h*(g*sin(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) + (r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0)*pow(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r, 2) - (k*(r - r0 + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0))/m)*(8.0/8.1E1) - h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(5.0E1/8.1E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.0E1/9.0))*(2.7E1/6.4E1);
		
        slipState.dr = dr + h*(g*sin(q + dq*h*(2.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(1.2E1/2.5E1) + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(2.0/1.5E1) + h*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r)*(8.0/7.5E1)) + (r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/4.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/4.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*3.0)*(8.0/7.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(2.0/1.5E1) + dr*h*(2.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(1.2E1/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(2.0/1.5E1))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(1.2E1/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(2.0/2.5E1))/r + (h*(g*cos(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/2.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/2.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*6.0)*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r))*(8.0/7.5E1))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0), 2) - (k*(r - r0 + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/4.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/4.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*3.0)*(8.0/7.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(2.0/1.5E1) + dr*h*(2.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(1.2E1/2.5E1)))/m)*(1.25E2/1.92E2) - h*(g*sin(q + dq*h*(2.0/2.7E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(1.0E1/9.0) - h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(5.0E1/8.1E1) + h*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r)*(8.0/8.1E1)) + (r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/4.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/4.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*3.0)*(8.0/8.1E1) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(5.0E1/8.1E1) + dr*h*(2.0/2.7E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(1.0E1/9.0))*pow(dq - (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(5.0E1/8.1E1))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(1.0E1/9.0))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(2.0/2.7E1))/r + (h*(g*cos(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/2.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/2.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*6.0)*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r))*(8.0/8.1E1))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0), 2) - (k*(r - r0 + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/4.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/4.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*3.0)*(8.0/8.1E1) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(5.0E1/8.1E1) + dr*h*(2.0/2.7E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(1.0E1/9.0)))/m)*(2.7E1/6.4E1) + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.3E1/1.92E2) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.25E2/1.92E2);
        
        slipState.q = q + dq*h*(2.3E1/1.92E2) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(1.25E2/1.92E2) + h*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(2.0/1.5E1))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(1.2E1/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(2.0/2.5E1))/r + (h*(g*cos(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/2.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/2.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*6.0)*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r))*(8.0/7.5E1))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0))*(1.25E2/1.92E2) - h*(dq - (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(5.0E1/8.1E1))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(1.0E1/9.0))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(2.0/2.7E1))/r + (h*(g*cos(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/2.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/2.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*6.0)*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r))*(8.0/8.1E1))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0))*(2.7E1/6.4E1);
        
        slipState.dq = dq - (h*((dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) + (r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0)*pow(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r, 2) - (k*(r - r0 + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0))/m)*(1.6E1/7.5E1) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(4.0/1.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(2.4E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(2.0/1.5E1))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(1.2E1/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(2.0/2.5E1))/r + (h*(g*cos(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/2.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/2.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*6.0)*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r))*(8.0/7.5E1))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0)) - g*cos(q + dq*h*(2.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(1.2E1/2.5E1) + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(2.0/1.5E1) + h*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r)*(8.0/7.5E1)))*(1.25E2/1.92E2))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/4.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/4.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*3.0)*(8.0/7.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(2.0/1.5E1) + dr*h*(2.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(1.2E1/2.5E1)) + (h*((dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.7E1) + h*(g*sin(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) + (r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0)*pow(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r, 2) - (k*(r - r0 + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0))/m)*(1.6E1/8.1E1) - h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.0E2/8.1E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(2.0E1/9.0))*(dq - (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(5.0E1/8.1E1))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(1.0E1/9.0))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(2.0/2.7E1))/r + (h*(g*cos(q + dq*h*(1.0/4.0) - h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*3.0 + h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(1.5E1/4.0)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/2.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/2.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*6.0)*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r))*(8.0/8.1E1))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(1.5E1/4.0) + dr*h*(1.0/4.0) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*3.0)) - g*cos(q + dq*h*(2.0/2.7E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(1.0E1/9.0) - h*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r)*(5.0E1/8.1E1) + h*(dq + (h*(g*cos(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) - (dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(8.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(1.2E1/2.5E1))*(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r))*(1.5E1/4.0))/(r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)) - (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*3.0)/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(1.0/4.0))/r)*(8.0/8.1E1)))*(2.7E1/6.4E1))/(r + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/4.0) + h*(g*sin(q + dq*h*(4.0/2.5E1) + h*(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(6.0/2.5E1)) + (r + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1))*pow(dq + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(6.0/2.5E1))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(4.0/2.5E1))/r, 2) - (k*(r - r0 + dr*h*(4.0/2.5E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(6.0/2.5E1)))/m)*(1.5E1/4.0) - h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*3.0)*(8.0/8.1E1) - h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(4.0/2.5E1) + h*(g*sin(q + dq*h*(1.0/3.0)) + pow(dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r, 2)*(r + dr*h*(1.0/3.0)) - (k*(r - r0 + dr*h*(1.0/3.0)))/m)*(6.0/2.5E1))*(5.0E1/8.1E1) + dr*h*(2.0/2.7E1) + h*(dr + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(1.0/3.0))*(1.0E1/9.0)) + (h*(g*cos(q + dq*h*(1.0/3.0)) - (dq - (h*(dq*dr*2.0 - g*cos(q))*(1.0/3.0))/r)*(dr*2.0 + h*((dq*dq)*r + g*sin(q) - (k*(r - r0))/m)*(2.0/3.0)))*(1.25E2/1.92E2))/(r + dr*h*(1.0/3.0)) - (h*(dq*dr*2.0 - g*cos(q))*(2.3E1/1.92E2))/r;
		
		// Advance time step, replace old with new
        slipState.rOld = r;
        slipState.drOld = dr;
        slipState.qOld = q;
        slipState.dqOld = dq;

	}

    // Stuff the msg and push to ROS for logging -------------------------------
    logData.r = slipState.r;
    logData.dr = slipState.dr;
    logData.q = slipState.q;
    logData.dq = slipState.dq;
    logData.k = k;
    logPort.write(logData);

    return slipState;

} // slipAdvance


// slipForce ===================================================================
LegForce ASCSlipModel::slipForce(SlipModel slipModel, SlipState slipState) {

    // Unpack parameters -------------------------------------------------------
    r = slipState.r;
    dr = slipState.dr;
    q = slipState.q;
    k = slipModel.k;
    r0 = slipModel.r0;

	// If virtual SLIP model is in flight --------------------------------------
	if (slipState.isFlight) {
		// Define component force.
		legForce.fx = 0.0;
		legForce.fz = 0.0;
		legForce.dfx = 0.0;
		legForce.dfz = 0.0;

	// If virtual SLIP model is in NOT in flight (is in stance)
	} else {	
        // Compute non-linear ATRIAS leg length stiffness.
        l1 = 0.5;
        l2 = 0.5;
        k = k*(sin(acos(r)) - (acos(r) - acos(r0))*cos(acos(r)))/(2.0*l1*l2*pow(sin(acos(r)), 3));
	
		// Define component forces.
		legForce.fx = k*(r - r0)*cos(q);
		legForce.fz = k*(r - r0)*sin(q);
		legForce.dfx = k*(dr - 0.0)*cos(q);
		legForce.dfz = k*(dr - 0.0)*sin(q);
	}

    // Stuff the msg and push to ROS for logging -------------------------------
    logData.fx = legForce.fx;
    logData.fz = legForce.fz;
    logData.dfx = legForce.dfx;
    logData.dfz = legForce.dfz;
    logData.k = k;
    logPort.write(logData);
    
	return legForce;

} // slipForce


// configureHook ===============================================================
bool ASCSlipModel::configureHook() {
	// Log data stuff
    RTT::TaskContext* rtOpsPeer = this->getPeer("Deployer")->getPeer("atrias_rt");
    if (rtOpsPeer) {
        getROSHeader = rtOpsPeer->provides("timestamps")->getOperation("getROSHeader");
    } else {
        log(Warning) << "[ASCSlipModel] Can't connect to the Deployer" << endlog();
    }
    
    log(Info) << "[ASCSlipModel] configured!" << endlog();
    return true;
} // configure Hook


// startHook ===================================================================
bool ASCSlipModel::startHook() {
    log(Info) << "[ASCSlipModel] started!" << endlog();
    return true;
} // startHook


// updateHook ==================================================================
void ASCSlipModel::updateHook() {
} // updateHook


// stopHook ====================================================================
void ASCSlipModel::stopHook() {
    log(Info) << "[ASCSlipModel] stopped!" << endlog();
} // stopHook


// cleanupHook =================================================================
void ASCSlipModel::cleanupHook() {
    log(Info) << "[ASCSlipModel] cleaned up!" << endlog();
} // cleanupHook


ORO_CREATE_COMPONENT(ASCSlipModel)

} // namespace controller
} // namespace atrias
