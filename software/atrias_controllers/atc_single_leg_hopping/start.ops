# Clean up the controller namespace
atrias_cm.resetControllerNames()

# Set up the component
import("atc_single_leg_hopping")
loadComponent("controller", "ATCSingleLegHopping")

# Connect RTOps with this controller (so they can see each other's operations)
connectPeers("atrias_rt", "controller")

# Set up subcontrollers.
import("asc_pd")

# ASCPD (Leg)
var string pd0Name = atrias_cm.getUniqueName("controller", "pd")
loadComponent(pd0Name, "ASCPD")
addPeer("controller", pd0Name)
controller.pd0Name = pd0Name

# ASCPD (Hip)
var string pd1Name = atrias_cm.getUniqueName("controller", "pd")
loadComponent(pd1Name, "ASCPD")
addPeer("controller", pd1Name)
controller.pd1Name = pd1Name

# ASCLegToMotorTransforms
require("legToMotorTransforms")
loadService("controller", "legToMotorTransforms")

# ASCLegForce
require("ascLegForce")
loadService("controller", "ascLegForce")

# Set up the gui connection
var ConnPolicy gui_policy
gui_policy.transport = 3

gui_policy.name_id = "/atc_single_leg_hopping_status"
stream("controller.gui_data_out", gui_policy)

gui_policy.name_id = "/atc_single_leg_hopping_input"
stream("controller.gui_data_in", gui_policy)

# Configure the component
controller.configure()

# Start the component
controller.start()
